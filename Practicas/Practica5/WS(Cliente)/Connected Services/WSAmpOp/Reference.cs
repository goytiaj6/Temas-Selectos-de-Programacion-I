//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WS_Cliente_.WSAmpOp {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Amplificador", Namespace="http://schemas.datacontract.org/2004/07/WSPractica")]
    [System.SerializableAttribute()]
    public partial class Amplificador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Res1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ResFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Res1 {
            get {
                return this.Res1Field;
            }
            set {
                if ((this.Res1Field.Equals(value) != true)) {
                    this.Res1Field = value;
                    this.RaisePropertyChanged("Res1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ResF {
            get {
                return this.ResFField;
            }
            set {
                if ((this.ResFField.Equals(value) != true)) {
                    this.ResFField = value;
                    this.RaisePropertyChanged("ResF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Ve {
            get {
                return this.VeField;
            }
            set {
                if ((this.VeField.Equals(value) != true)) {
                    this.VeField = value;
                    this.RaisePropertyChanged("Ve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Vs {
            get {
                return this.VsField;
            }
            set {
                if ((this.VsField.Equals(value) != true)) {
                    this.VsField = value;
                    this.RaisePropertyChanged("Vs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSAmpOp.IWSAmpOp")]
    public interface IWSAmpOp {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSAmpOp/Ganancia", ReplyAction="http://tempuri.org/IWSAmpOp/GananciaResponse")]
        WS_Cliente_.WSAmpOp.Amplificador Ganancia(double R1, double RF, double Input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSAmpOp/Ganancia", ReplyAction="http://tempuri.org/IWSAmpOp/GananciaResponse")]
        System.Threading.Tasks.Task<WS_Cliente_.WSAmpOp.Amplificador> GananciaAsync(double R1, double RF, double Input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWSAmpOpChannel : WS_Cliente_.WSAmpOp.IWSAmpOp, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSAmpOpClient : System.ServiceModel.ClientBase<WS_Cliente_.WSAmpOp.IWSAmpOp>, WS_Cliente_.WSAmpOp.IWSAmpOp {
        
        public WSAmpOpClient() {
        }
        
        public WSAmpOpClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSAmpOpClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSAmpOpClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSAmpOpClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WS_Cliente_.WSAmpOp.Amplificador Ganancia(double R1, double RF, double Input) {
            return base.Channel.Ganancia(R1, RF, Input);
        }
        
        public System.Threading.Tasks.Task<WS_Cliente_.WSAmpOp.Amplificador> GananciaAsync(double R1, double RF, double Input) {
            return base.Channel.GananciaAsync(R1, RF, Input);
        }
    }
}
